Functionality:
- given a collection of Java objects that exponse a number of getters
- print them in a "pretty" format suitable for text files, as in the example below:

======  =====  =======  ==========  ============================  =======
Amount  Total  Name     Surname                       Start Date  Other
======  =====  =======  ==========  ============================  =======
    20   30.0  name: 0  sur name 0  Wed Jun 01 00:21:13 EDT 2016  other 0
    21   31.0  name: 1  sur name 1  Wed Jun 01 00:21:13 EDT 2016  other 1
    22   32.0  name: 2  sur name 2  Wed Jun 01 00:21:13 EDT 2016  other 2
    23   33.0  name: 3  sur name 3  Wed Jun 01 00:21:13 EDT 2016  other 3
    24   34.0  name: 4  sur name 4  Wed Jun 01 00:21:13 EDT 2016  other 4
    25   35.0  name: 5  sur name 5  Wed Jun 01 00:21:13 EDT 2016  other 5
    26   36.0  name: 6  sur name 6  Wed Jun 01 00:21:13 EDT 2016  other 6
    27   37.0  name: 7  sur name 7  Wed Jun 01 00:21:13 EDT 2016  other 7
    28   38.0  name: 8  sur name 8  Wed Jun 01 00:21:13 EDT 2016  other 8
    29   39.0  name: 9  sur name 9  Wed Jun 01 00:21:13 EDT 2016  other 9
======  =====  =======  ==========  ============================  =======


With a small code change you can customize:

- The gutter, currently hardcoded to two spaces
- The character used for header and footer
- Customize the way the date is formatted

TestData is used to show how this works and Test contains the main method.

In Test.java there is a presentation of how this is implemented:

        // prepare the list of value objects
        List<TestData> items = new ArrayList<TestData>();
        for(int count = 0; count < 10; count ++){
            TestData item = new TestData(20 + count, 30D + count, "name: " + count, "sur name " + count, new Date(), "other " + count);

            items.add(item);
        }
        
        // now get the TextPrint and proceed
        List<TextPrintColumnConfig> config = new ArrayList<TextPrintColumnConfig>();
        config.add(new TextPrintColumnConfig("Amount", "getAmount", true, false));
        config.add(new TextPrintColumnConfig("Total", "getTotal", true, false));
        config.add(new TextPrintColumnConfig("Name", "getName", false, false));
        config.add(new TextPrintColumnConfig("Surname", "getSurname", false, false));
        config.add(new TextPrintColumnConfig("Start Date", "getDtStart", true, false));
        config.add(new TextPrintColumnConfig("Other", "getOther", false, false));

        PrintWriter wrt = new PrintWriter(System.out);
        TextPrint printer = new TextPrint(items, config, wrt);
        printer.print();
        wrt.flush();
        wrt.close();

     - A list of value objects is provided. The items in the list should expose the same getters
     - Then the TextPrint is initialized with the following parameters:
         a) items: the list of value objects
         b) config: a list of TextPrintColumnConfig - one for each column
         c) wrt: PrintWriter class generated around the output stream used for rendering the results

    The end of line used to split the text lines is taken from the System properties.

